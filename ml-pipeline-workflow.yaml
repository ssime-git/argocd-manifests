apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  name: ml-pipeline-workflow
  namespace: argocd
spec:
  entrypoint: ml-pipeline-2
  templates:
  - name: ml-pipeline-2
    steps:
    - - name: ingest-data
        template: ingest-data
    - - name: preprocess-data
        template: preprocess-data
        arguments:
          artifacts:
          - name: iris-data
            from: "{{steps.ingest-data.outputs.artifacts.iris-data}}"
    - - name: train-model
        template: train-model
        arguments:
          artifacts:
          - name: preprocessed-data
            from: "{{steps.preprocess-data.outputs.artifacts.preprocessed-data}}"
    - - name: evaluate-model
        template: evaluate-model
        arguments:
          artifacts:
          - name: trained-model
            from: "{{steps.train-model.outputs.artifacts.trained-model}}"
    - - name: deploy-model
        template: deploy-model
        arguments:
          artifacts:
          - name: evaluated-model
            from: "{{steps.evaluate-model.outputs.artifacts.evaluated-model}}"

  - name: ingest-data
    container:
      image: ssimedockerhub/ml-pipeline:latest
      command: [python, scripts/ingest_data.py]
    outputs:
      artifacts:
      - name: iris-data
        path: /app/data/iris_data.csv

  - name: preprocess-data
    inputs:
      artifacts:
      - name: iris-data
        path: /app/data/iris_data.csv
    container:
      image: ssimedockerhub/ml-pipeline:latest
      command: [python, scripts/preprocess_data.py]
    outputs:
      artifacts:
      - name: preprocessed-data
        path: /app/data/preprocessed_data.npz

  - name: train-model
    inputs:
      artifacts:
      - name: preprocessed-data
        path: /app/data/preprocessed_data.npz
    container:
      image: ssimedockerhub/ml-pipeline:latest
      command: [python, scripts/train_model.py]
    outputs:
      artifacts:
      - name: trained-model
        path: /app/model/iris_model.joblib

  - name: evaluate-model
    inputs:
      artifacts:
      - name: trained-model
        path: /app/model/iris_model.joblib
    container:
      image: ssimedockerhub/ml-pipeline:latest
      command: [python, scripts/evaluate_model.py]
    outputs:
      artifacts:
      - name: evaluated-model
        path: /app/results/evaluation.txt

  - name: deploy-model
    inputs:
      artifacts:
      - name: evaluated-model
        path: /app/results/evaluation.txt
    container:
      image: ssimedockerhub/ml-pipeline:latest
      command: [python, scripts/deploy_model.py]
    outputs:
      artifacts:
      - name: deployed-model
        path: /app/deployment/iris_model_prod.joblib