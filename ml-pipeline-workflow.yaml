apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: ml-pipeline-data
  namespace: argocd
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  name: ml-pipeline-workflow
  namespace: argocd
spec:
  entrypoint: ml-pipeline
  volumes:
  - name: workdir
    persistentVolumeClaim:
      claimName: ml-pipeline-data
  templates:
  - name: ml-pipeline
    steps:
    - - name: ingest-data
        template: pipeline-step
        arguments:
          parameters:
          - name: script
            value: scripts/ingest_data.py
    - - name: debug-after-ingest
        template: debug-step
    - - name: preprocess-data
        template: pipeline-step
        arguments:
          parameters:
          - name: script
            value: scripts/preprocess_data.py
    - - name: train-model
        template: pipeline-step
        arguments:
          parameters:
          - name: script
            value: scripts/train_model.py
    - - name: evaluate-model
        template: pipeline-step
        arguments:
          parameters:
          - name: script
            value: scripts/evaluate_model.py
    - - name: deploy-model
        template: pipeline-step
        arguments:
          parameters:
          - name: script
            value: scripts/deploy_model.py

  - name: pipeline-step
    inputs:
      parameters:
      - name: script
    container:
      image: ssimedockerhub/ml-pipeline:latest
      command: [python]
      args: ["{{inputs.parameters.script}}"]
      volumeMounts:
      - name: workdir
        mountPath: /app/data

  - name: debug-step
    container:
      image: busybox
      command: [sh, -c]
      args: ["echo 'Debug: Listing /app/data'; ls -l /app/data; echo 'Debug: Displaying file contents'; cat /app/data/iris_data.csv || echo 'File not found'"]
      volumeMounts:
      - name: workdir
        mountPath: /app/data